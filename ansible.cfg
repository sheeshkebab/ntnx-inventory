[defaults]
#collections_path=/Users/richard.hailstone/.ansible/collections:/usr/share/ansible/collections

# (boolean) A boolean to enable or disable scanning the sys.path for installed collections.
collections_scan_sys_path=True
# (pathspec) Colon-separated paths in which Ansible will search for Cache Plugins.
#cache_plugins=/Users/richard.hailstone/.ansible/plugins/cache:/usr/share/ansible/plugins/cache
# (pathspec) Colon-separated paths in which Ansible will search for Callback Plugins.
#callback_plugins=/Users/richard.hailstone/.ansible/plugins/callback:/usr/share/ansible/plugins/callback
# (pathspec) Colon-separated paths in which Ansible will search for Cliconf Plugins.
#cliconf_plugins=/Users/richard.hailstone/.ansible/plugins/cliconf:/usr/share/ansible/plugins/cliconf
# (pathspec) Colon-separated paths in which Ansible will search for Connection Plugins.
#connection_plugins=/Users/richard.hailstone/.ansible/plugins/connection:/usr/share/ansible/plugins/connection
# (boolean) Toggles debug output in Ansible. This is *very* verbose and can hinder multiprocessing. Debug output can also include secret information despite no_log settings being enabled, which means debug mode should not be used in production.
debug=False

# (string) This indicates the command to use to spawn a shell under, which is required for Ansible's execution needs on a target. Users may need to change this in rare instances when shell usage is constrained, but in most cases, it may be left as is.
executable=/bin/sh
# (pathspec) Colon-separated paths in which Ansible will search for Jinja2 Filter Plugins.
#filter_plugins=/Users/richard.hailstone/.ansible/plugins/filter:/usr/share/ansible/plugins/filter

# (pathlist) Comma-separated list of Ansible inventory sources
#inventory=/etc/ansible/hosts

inventory=nutanix.yaml

# (pathspec) Colon-separated paths in which Ansible will search for Inventory Plugins.
#inventory_plugins=/Users/richard.hailstone/.ansible/plugins/inventory:/usr/share/ansible/plugins/inventory

# (tmppath) Temporary directory for Ansible to use on the controller.
#local_tmp=/Users/richard.hailstone/.ansible/tmp

# (pathspec) Colon-separated paths in which Ansible will search for Lookup Plugins.
#lookup_plugins=/Users/richard.hailstone/.ansible/plugins/lookup:/usr/share/ansible/plugins/lookup

# (string) Sets the macro for the 'ansible_managed' variable available for :ref:`ansible_collections.ansible.builtin.template_module` and :ref:`ansible_collections.ansible.windows.win_template_module`.  This is only relevant to those two modules.
ansible_managed=Ansible managed

# (path) Option for connections using a certificate or key file to authenticate, rather than an agent or passwords, you can set the default value here to avoid re-specifying ``--private-key`` with every invocation.
private_key_file=

# (pathspec) Colon-separated paths in which Ansible will search for Roles.
#roles_path=/Users/richard.hailstone/.ansible/roles:/usr/share/ansible/roles:/etc/ansible/roles

# (string) Set the main callback used to display Ansible output. You can only have one at a time.
# You can have many other callbacks, but just one can be in charge of stdout.
# See :ref:`callback_plugins` for a list of available options.
stdout_callback=default

# (string) Set the default strategy used for plays.
strategy=linear

# (pathspec) Colon-separated paths in which Ansible will search for Strategy Plugins.
#strategy_plugins=/Users/richard.hailstone/.ansible/plugins/strategy:/usr/share/ansible/plugins/strategy

# (boolean) Toggle the use of "su" for tasks.
su=False

 (integer) This is the default timeout for connection plugins to use.
timeout=10

# (string) Can be any connection plugin available to your ansible installation.
# There is also a (DEPRECATED) special 'smart' option, that will toggle between 'ssh' and 'paramiko' depending on controller OS and ssh versions.
transport=ssh

# (boolean) By default, Ansible will issue a warning when there are no hosts in the inventory.
# These warnings can be silenced by adjusting this setting to False.
localhost_warning=True

# (list) Check all of these extensions when looking for 'variable' files which should be YAML or JSON or vaulted versions of these.
# This affects vars_files, include_vars, inventory and vars plugins among others.
yaml_valid_extensions=.yml, .yaml, .json

[colors]
# (string) Defines the color to use on 'Changed' task status.
changed=yellow

# (string) Defines the default color to use for ansible-console.
console_prompt=white

# (string) Defines the color to use when emitting debug messages.
debug=dark gray

# (string) Defines the color to use when emitting deprecation messages.
deprecate=purple

# (string) Defines the color to use when showing added lines in diffs.
diff_add=green

# (string) Defines the color to use when showing diffs.
diff_lines=cyan

# (string) Defines the color to use when showing removed lines in diffs.
diff_remove=red

# (string) Defines the color to use when emitting a constant in the ansible-doc output.
doc_constant=dark gray

# (string) Defines the color to use when emitting a deprecated value in the ansible-doc output.
doc_deprecated=magenta

# (string) Defines the color to use when emitting a link in the ansible-doc output.
doc_link=cyan

# (string) Defines the color to use when emitting a module name in the ansible-doc output.
doc_module=yellow

# (string) Defines the color to use when emitting a plugin name in the ansible-doc output.
doc_plugin=yellow

# (string) Defines the color to use when emitting cross-reference in the ansible-doc output.
doc_reference=magenta

# (string) Defines the color to use when emitting error messages.
error=red

# (string) Defines the color to use for highlighting.
highlight=white

# (string) Defines the color to use when showing 'Included' task status.
included=cyan

# (string) Defines the color to use when showing 'OK' task status.
ok=green

# (string) Defines the color to use when showing 'Skipped' task status.
skip=cyan

# (string) Defines the color to use on 'Unreachable' status.
unreachable=bright red

# (string) Defines the color to use when emitting verbose messages. In other words, those that show with '-v's.
verbose=blue

# (string) Defines the color to use when emitting warning messages.
warn=bright purple


[inventory]
# (string) This setting changes the behaviour of mismatched host patterns, it allows you to force a fatal error, a warning or just ignore it.
host_pattern_mismatch=warning

# (boolean) If 'true', it is a fatal error when any given inventory source cannot be successfully parsed by any available inventory plugin; otherwise, this situation only attracts a warning.

any_unparsed_is_failed=False

# (bool) Toggle to turn on inventory caching.
# This setting has been moved to the individual inventory plugins as a plugin option :ref:`inventory_plugins`.
# The existing configuration settings are still accepted with the inventory plugin adding additional options from inventory configuration.
# This message will be removed in 2.16.
cache=False

# (string) The plugin for caching inventory.
# This setting has been moved to the individual inventory plugins as a plugin option :ref:`inventory_plugins`.
# The existing configuration settings are still accepted with the inventory plugin adding additional options from inventory and fact cache configuration.
# This message will be removed in 2.16.
#cache_plugin=

# (string) The inventory cache connection.
# This setting has been moved to the individual inventory plugins as a plugin option :ref:`inventory_plugins`.
# The existing configuration settings are still accepted with the inventory plugin adding additional options from inventory and fact cache configuration.
# This message will be removed in 2.16.
#cache_connection=

# (string) The table prefix for the cache plugin.
# This setting has been moved to the individual inventory plugins as a plugin option :ref:`inventory_plugins`.
# The existing configuration settings are still accepted with the inventory plugin adding additional options from inventory and fact cache configuration.
# This message will be removed in 2.16.
cache_prefix=ansible_inventory_

# (string) Expiration timeout for the inventory cache plugin data.
# This setting has been moved to the individual inventory plugins as a plugin option :ref:`inventory_plugins`.
# The existing configuration settings are still accepted with the inventory plugin adding additional options from inventory and fact cache configuration.
# This message will be removed in 2.16.
cache_timeout=3600

# (list) List of enabled inventory plugins, it also determines the order in which they are used.
enable_plugins=host_list, script, auto, yaml, ini, toml, nutanix.ncp.ntnx_prism_vm_inventory

# (bool) Controls if ansible-inventory will accurately reflect Ansible's view into inventory or its optimized for exporting.
export=False

# (list) List of extensions to ignore when using a directory as an inventory source.
ignore_extensions=.pyc, .pyo, .swp, .bak, ~, .rpm, .md, .txt, .rst, .orig, .ini, .cfg, .retry

# (list) List of patterns to ignore when using a directory as an inventory source.
#ignore_patterns=

# (bool) If 'true' it is a fatal error if every single potential inventory source fails to parse, otherwise, this situation will only attract a warning.

unparsed_is_failed=False

# (boolean) By default, Ansible will issue a warning when no inventory was loaded and notes that it will use an implicit localhost-only inventory.
# These warnings can be silenced by adjusting this setting to False.
inventory_unparsed_warning=True
